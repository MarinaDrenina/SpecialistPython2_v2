# Выверите и скопируйте сюда наиболее подходяший алгоритм для работы с графом(bfs/dfs)

# Опишите список смежности по изображению лабиринта из файла task.md
graph = [
    # список смежности
    [1],             # 0
    [5],             # 1
    [6],             # 2
    [7],             # 3
    [8],             # 4
    [4],             # 5
    [2,10],          # 6
    [3],             # 7
    [9,12],          # 8
    [8,10],          # 9
    [6,9,11,14],     # 10
    [10],            # 11
    [8],             # 12
    [],              # 13
    [10,15],         # 14
    [14],            # 15
]
# Решите задачу и выведите ответ в нужном формате
visited = [False] * (len(graph))

def dfs(v):
    visited[v] = True
    for w in graph[v]:
        if not visited[w]:  # посещён ли текущий сосед?
            dfs(w)

s=[0,12,3]
for el in s:
    visited = [False] * (len(graph))
    dfs(el)
    if visited[el] and visited[14]:
        print(f"Их точки S{s.index(el)+1} можно дойти до финиша")
    else:
        print(f"Их точки S{s.index(el) + 1} нельзя дойти до финиша")
